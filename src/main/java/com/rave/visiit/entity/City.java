package com.rave.visiit.entity;
// default package
// Generated 24 Dec, 2014 7:54:49 PM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

import com.rave.visiit.util.Constants;

/**
 * City generated by hbm2java
 */
@Entity
@Table(name = "city", catalog = Constants.DB_CATELOG)
public class City implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer cityId;
	private int state;
	private String cityCode;
	private String cityName;
	private String cityDescription;
	private Boolean cityIsactive;
	private Date cityUpdatedDate;
	private Boolean isDeleted = Boolean.FALSE;
	@Transient
	private String activeModel;
	private String modifiedBy;
	private Date createdOn;
	private String createdBy;
	//private Set<Locations> locationses = new HashSet<Locations>(0);

	public City() {
	}

	public City(int state, String cityCode, String cityName,
			String cityDescription, Boolean cityIsactive,
			Date cityUpdatedDate,Boolean isDeleted) {
		this.state = state;
		this.cityCode = cityCode;
		this.cityName = cityName;
		this.cityDescription = cityDescription;
		this.cityIsactive = cityIsactive;
		this.cityUpdatedDate = cityUpdatedDate;
	}

	public City(int state, String cityCode, String cityName,
			String cityDescription, Boolean cityIsactive,
			Date cityUpdatedDate, Set<Locations> locationses) {
		this.state = state;
		this.cityCode = cityCode;
		this.cityName = cityName;
		this.cityDescription = cityDescription;
		this.cityIsactive = cityIsactive;
		this.cityUpdatedDate = cityUpdatedDate;
//		this.locationses = locationses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "city_id", unique = true, nullable = false)
	@Cascade({CascadeType.SAVE_UPDATE, CascadeType.DELETE_ORPHAN})
	public Integer getCityId() {
		return this.cityId;
	}

	public void setCityId(Integer cityId) {
		this.cityId = cityId;
	}

//	@ManyToOne(fetch = FetchType.LAZY)
//	@JoinColumn(name = "city_state_id", nullable = false)
//	@ManyToOne(fetch = FetchType.EAGER)
//  @JoinColumn(name = "city_state_id", nullable = false)
	@Column(name = "city_state_id", nullable = false)
	public int getState() {
		return this.state;
	}

	public void setState(int state) {
		this.state = state;
	}

	@Column(name = "city_code", nullable = false, length = 30)
	public String getCityCode() {
		return this.cityCode;
	}

	public void setCityCode(String cityCode) {
		this.cityCode = cityCode;
	}

	@Column(name = "city_name", nullable = false, length = 50)
	public String getCityName() {
		return this.cityName;
	}

	public void setCityName(String cityName) {
		this.cityName = cityName;
	}

	@Column(name = "city_description", length = 150)
	public String getCityDescription() {
		return this.cityDescription;
	}

	public void setCityDescription(String cityDescription) {
		this.cityDescription = cityDescription;
	}

	@Column(name = "city_is_active", nullable = false, length = 6)
	public Boolean getCityIsactive() {
		return this.cityIsactive;
	}

	public void setCityIsactive(Boolean cityIsactive) {
		this.cityIsactive = cityIsactive;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "city_updated_date", nullable = false, length = 0)
	public Date getCityUpdatedDate() {
		return this.cityUpdatedDate;
	}

	public void setCityUpdatedDate(Date cityUpdatedDate) {
		this.cityUpdatedDate = cityUpdatedDate;
	}

	/*@OneToMany(fetch = FetchType.LAZY, mappedBy = "city")
	@Cascade({CascadeType.SAVE_UPDATE, CascadeType.DELETE})
	//@OneToMany(mappedBy = "city",targetEntity=Locations.class,fetch=FetchType.EAGER)
    @Fetch(FetchMode.JOIN)
	public Set<Locations> getLocationses() {
		return this.locationses;
	}

	public void setLocationses(Set<Locations> locationses) {
		this.locationses = locationses;
	}*/
	
	@Column(name = "is_deleted")
	public Boolean getIsDeleted() {
		return isDeleted;
	}

	public void setIsDeleted(Boolean isDeleted) {
		this.isDeleted = isDeleted;
	}
	
	@Transient
	public String getActiveModel() {
		if(cityIsactive != null && cityIsactive){
			this.activeModel = "Y";
		} else {
			this.activeModel = "N";
		}
		return activeModel;
	}

	public void setActiveModel(String activeModel) {
			this.activeModel = activeModel;
	}
	
	@Column(name = "modified_by")
	public String getModifiedBy() {
		return modifiedBy;
	}

	public void setModifiedBy(String modifiedBy) {
		this.modifiedBy = modifiedBy;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_on", nullable = false, length = 0)
	public Date getCreatedOn() {
		return createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}
	
	@Column(name = "created_by")
	public String getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}
}
