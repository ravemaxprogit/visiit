package com.rave.visiit.entity;
// default package
// Generated 24 Dec, 2014 7:54:49 PM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import com.rave.visiit.util.Constants;

/**
 * State generated by hbm2java
 */
@Entity
@Table(name = "state", catalog = Constants.DB_CATELOG)
public class State implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer stateId;
	private int country;
	private String stateCode;
	private String stateName;
	private String stateDescription;
	private Boolean stateIsactive;
	private Date stateUpdatedDate;
	private Boolean isDeleted = Boolean.FALSE;
	@Transient
	private String activeModel;
	private String modifiedBy;
	private Date createdOn;
	private String createdBy;
	//private Set<City> cities = new HashSet<City>(0);

	public State() {
	}

	public State(int country, String stateCode, String stateName,
			String stateDescription,
			Boolean stateIsactive, Date stateUpdatedDate,Boolean isDeleted) {
		this.country = country;
		this.stateCode = stateCode;
		this.stateName = stateName;
		this.stateDescription = stateDescription;
		this.stateIsactive = stateIsactive;
		this.stateUpdatedDate = stateUpdatedDate;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "state_id", unique = true, nullable = false)
	public Integer getStateId() {
		return this.stateId;
	}

	public void setStateId(Integer stateId) {
		this.stateId = stateId;
	}

//	@ManyToOne(fetch = FetchType.LAZY)
//	@JoinColumn(name = "state_country_id", nullable = false)
//	@ManyToOne(fetch = FetchType.EAGER)
//  @JoinColumn(name = "state_country_id", nullable = false)
	@Column(name = "state_country_id", nullable = false)
	public int getCountry() {
		return this.country;
	}

	public void setCountry(int country) {
		this.country = country;
	}

	@Column(name = "state_code", nullable = false, length = 30)
	public String getStateCode() {
		return this.stateCode;
	}

	public void setStateCode(String stateCode) {
		this.stateCode = stateCode;
	}

	@Column(name = "state_name", nullable = false, length = 50)
	public String getStateName() {
		return this.stateName;
	}

	public void setStateName(String stateName) {
		this.stateName = stateName;
	}

	@Column(name = "state_description", length = 150)
	public String getStateDescription() {
		return this.stateDescription;
	}

	public void setStateDescription(String stateDescription) {
		this.stateDescription = stateDescription;
	}

	@Column(name = "state_is_active", nullable = false, length = 6)
	public Boolean getStateIsactive() {
		return this.stateIsactive;
	}

	public void setStateIsactive(Boolean stateIsactive) {
		this.stateIsactive = stateIsactive;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "state_updated_date", nullable = false, length = 0)
	public Date getStateUpdatedDate() {
		return this.stateUpdatedDate;
	}

	public void setStateUpdatedDate(Date stateUpdatedDate) {
		this.stateUpdatedDate = stateUpdatedDate;
	}

	/*@OneToMany(fetch = FetchType.LAZY, mappedBy = "state")
	//@OneToMany(mappedBy = "state",targetEntity=City.class,fetch=FetchType.EAGER)
	@Cascade({CascadeType.SAVE_UPDATE, CascadeType.DELETE})
    @Fetch(FetchMode.JOIN)
	public Set<City> getCities() {
		return this.cities;
	}

	public void setCities(Set<City> cities) {
		this.cities = cities;
	}*/
	
	@Column(name = "is_deleted")
	public Boolean getIsDeleted() {
		return isDeleted;
	}

	public void setIsDeleted(Boolean isDeleted) {
		this.isDeleted = isDeleted;
	}
	
	@Transient
	public String getActiveModel() {
		if(stateIsactive != null && stateIsactive){
			this.activeModel = "Y";
		} else {
			this.activeModel = "N";
		}
		return activeModel;
	}

	public void setActiveModel(String activeModel) {
		this.activeModel = activeModel;
	}
	
	@Column(name = "modified_by")
	public String getModifiedBy() {
		return modifiedBy;
	}

	public void setModifiedBy(String modifiedBy) {
		this.modifiedBy = modifiedBy;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_on", nullable = false, length = 0)
	public Date getCreatedOn() {
		return createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}
	
	@Column(name = "created_by")
	public String getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}
	
}
